h1.h2.fw-bold
  = link_to character.local_name, character_path(character), class: "text-body"

.mb-3
  span.badge.bg-secondary
    = t "noun.character"

.mb-4
  = Buttons::StarButtonComponent.new(self, starrable: character).render
  .small.text-muted.mt-2
    = icon "info-circle", class: "me-1"
    = t "messages._components.favorite_button.hint", resource_type: t("noun.character").downcase

.mb-4
  h2.h4.fw-bold.mt-4.mb-3
    = icon "sticky-note", "far", class: "me-1"
    = t "noun.information"
  dl
    dt.small = t "activerecord.attributes.character.name"
    dd = character.name
    - if character.name_kana.present?
      dt.small = t "activerecord.attributes.character.name_kana"
      dd = character.name_kana
    - if character.name_en.present?
      dt.small = t "activerecord.attributes.character.name_en"
      dd = character.name_en
    - if character.local_nickname.present?
      dt.small = t "activerecord.attributes.character.nickname"
      dd = character.local_nickname
    - if character.series.present?
      dt.small = t "activerecord.attributes.character.series"
      dd = character.series.local_name
    - if character.local_birthday.present?
      dt.small = t "activerecord.attributes.character.birthday"
      dd = character.local_birthday
    - if character.local_age.present?
      dt.small = t "activerecord.attributes.character.age"
      dd = character.local_age
    - if character.local_blood_type.present?
      dt.small = t "activerecord.attributes.character.blood_type"
      dd = character.local_blood_type
    - if character.local_height.present?
      dt.small = t "activerecord.attributes.character.height"
      dd = character.local_height
    - if character.local_weight.present?
      dt.small = t "activerecord.attributes.character.weight"
      dd = character.local_weight
    - if character.local_nationality.present?
      dt.small = t "activerecord.attributes.character.nationality"
      dd = character.local_nationality
    - if character.local_occupation.present?
      dt.small = t "activerecord.attributes.character.occupation"
      dd = character.local_occupation
    - if character.local_description.present?
      dt.small = t "activerecord.attributes.character.description"
      dd
        = character.local_description
        .small
          span.me-1
            = "#{t('noun.source')}:".html_safe
          = character.local_description_source

- if character_favorites.present?
  .mb-4
    .align-items-center.row
      .col
        h2.h4.fw-bold.mb-0
          = icon "users", class: "me-1"
          = t "noun.fans"
          span.ps-1
            = "(#{t('noun.users_count', count: character.favorite_users_count)})"
      .col-auto.text-end
        - if character_favorites.length > 7
          = link_to t("verb.view_all"), character_fan_list_path(character)

    .g-1.mt-3.row
      - character_favorites.each do |character_favorite|
        .col-auto
          = link_to profile_path(character_favorite.user.username) do
            = render Pictures::AvatarPictureComponent.new(user: character_favorite.user, width: 30)

- if user_signed_in? && current_user.committer?
  = link_to t("messages._common.edit_on_annict_db"), db_edit_character_path(character), class: "btn btn-secondary w-100 mt-2"
